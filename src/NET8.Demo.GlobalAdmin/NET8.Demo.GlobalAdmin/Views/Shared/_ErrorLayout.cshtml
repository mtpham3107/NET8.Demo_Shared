@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title </title>
    <link href="/css/fonts.css" rel="stylesheet" />
    <link href="/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
    <link href="/css/style.bundle.css" rel="stylesheet" type="text/css" />
</head>
<body id="kt_body" class="auth-bg bgi-size-cover bgi-position-center bgi-no-repeat">
    <script>
        var defaultThemeMode = "light";
        var themeMode;
        if (document.documentElement) {
            if (document.documentElement.hasAttribute("data-bs-theme-mode")) {
                themeMode = document.documentElement.getAttribute("data-bs-theme-mode");
            }
            else {
                if (localStorage.getItem("data-bs-theme") !== null) {
                    themeMode = localStorage.getItem("data-bs-theme");
                } else { themeMode = defaultThemeMode; }
            }
            if (themeMode === "system") {
                themeMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
            }
            document.documentElement.setAttribute("data-bs-theme", themeMode);
        }

        async function loadLocalization() {
            let result = {}
            try {
                const response = await fetch('/api/localizations/get-localized');
                if (response.ok) {
                    result = await response.json();
                }
            } catch (error) {
                console.error('Error fetching localized strings:', error);
            }
            return result
        }
    </script>

    <style>
        body {
            background-image: url('/media/auth/bg9.jpg');
        }

        [data-bs-theme="dark"] body {
            background-image: url('/media/auth/bg9-dark.jpg');
        }
    </style>

    <div class="d-flex flex-column flex-root">
        <div class="d-flex flex-column flex-center flex-column-fluid">
            <div class="d-flex flex-column flex-center text-center p-10">
                <div class="card card-flush w-lg-650px py-5">
                    <div class="card-body py-15 py-lg-20">
                        @RenderBody()
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="/plugins/global/plugins.bundle.js"></script>
    <script src="/js/scripts.bundle.js"></script>
    @RenderSection("scripts", required: false)
</body>
</html>
